/**
 * These rules are for the Firestore database. They are designed to be secure,
 * ensuring that users can only read and write their own data, and interact
 * with snaps and other collections in a controlled manner.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read and update their own user document.
    // They cannot create or delete their own user document directly.
    // User documents are created server-side (in our case, via the useAuth hook) upon sign-up.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }

    // Snaps can be created by any authenticated user.
    // Users can only read snaps sent to them.
    // Users can only delete snaps they have sent.
    // Snaps cannot be updated (they are immutable after sending).
    match /snaps/{snapId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && resource.data.recipientId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.senderId == request.auth.uid;
      allow update: if false;
    }

    // A placeholder for future collections like stories and groups.
    // By default, all other collections are locked down.
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 